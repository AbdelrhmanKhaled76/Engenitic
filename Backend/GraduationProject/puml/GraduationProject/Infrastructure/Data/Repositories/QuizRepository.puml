@startuml
interface IQuizRepository {
    GetQuizByCourseAndPosition(courseId:int, position:int) : Task<QuizDTO?>
    AddUserQuizAttempt(userQuizAttempt:UserQuizAttemptDTO) : Task<bool>
}
class QuizRepository {
    + QuizRepository(context:AppDbContext)
    + <<async>> GetQuizByCourseAndPosition(courseId:int, position:int) : Task<QuizDTO?>
    + <<async>> AddUserQuizAttempt(userQuizAttempt:UserQuizAttemptDTO) : Task<bool>
}
class "IRepository`1"<T> {
}
class "Repository`1"<T> {
}
class "Func`4"<T1,T2,T3,T4> {
}
"IRepository`1" "<Quiz>" <|-- IQuizRepository
"Repository`1" "<Quiz>" <|-- QuizRepository
IQuizRepository <|-- QuizRepository
QuizRepository --> "_context" AppDbContext
QuizRepository o-> "GetQuizAsync<AppDbContext,int,int,Task<QuizDTO?>>" "Func`4"
@enduml
